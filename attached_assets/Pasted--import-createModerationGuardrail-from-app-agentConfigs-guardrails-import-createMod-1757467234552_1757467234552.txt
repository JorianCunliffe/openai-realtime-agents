@@
-import { createModerationGuardrail } from "@/app/agentConfigs/guardrails";
+import { createModerationGuardrail } from "@/app/agentConfigs/guardrails";
+import { getEphemeralSessionPayload } from "@/lib/realtime/bootstrapClient";
@@
   const [sessionStatus, setSessionStatus] =
     useState<SessionStatus>("DISCONNECTED");
+  // Optional: observe attachCalendar/hasSid/hasUserId coming from /api/session
+  const [sessionMeta, setSessionMeta] = useState<any>(null);
@@
-  const fetchEphemeralKey = async (): Promise<string | null> => {
-    logClientEvent({ url: "/session" }, "fetch_session_token_request");
-    const tokenResponse = await fetch("/api/session");
-    const data = await tokenResponse.json();
-    logServerEvent(data, "fetch_session_token_response");
-
-    if (!data.client_secret?.value) {
-      logClientEvent(data, "error.no_ephemeral_key");
-      console.error("No ephemeral key provided by the server");
-      setSessionStatus("DISCONNECTED");
-      return null;
-    }
-
-    return data.client_secret.value;
-  };
+  const fetchEphemeralKey = async (): Promise<string | null> => {
+    try {
+      logClientEvent({ url: "/session" }, "fetch_session_token_request");
+      const { token, meta, raw } = await getEphemeralSessionPayload();
+      setSessionMeta(meta);
+      logServerEvent(raw, "fetch_session_token_response");
+      return token;
+    } catch (err: any) {
+      logClientEvent({ error: String(err?.message || err) }, "error.no_ephemeral_key");
+      console.error("No ephemeral key provided by the server:", err);
+      setSessionStatus("DISCONNECTED");
+      return null;
+    }
+  };
@@
   const connectToRealtime = async () => {
@@
         await connect({
           getEphemeralKey: async () => EPHEMERAL_KEY,
           initialAgents: reorderedAgents,
           audioElement: sdkAudioElement,
           outputGuardrails: [guardrail],
           extraContext: {
             addTranscriptBreadcrumb,
           },
         });
+        // Optional: quick visibility in the logs
+        if (sessionMeta) {
+          console.log("[session meta]", sessionMeta);
+        }
